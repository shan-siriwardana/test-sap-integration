openapi: 3.0.3
info:
  title: Order System API
  version: 1.0.1
  description: Create orders from priced/held checkout sessions.

servers:
  - url: https://internal.api.example.com

paths:
  /orders:
    post:
      summary: Create an order from a basket checkout session
      description: >
        Validates the checkout session (not expired/consumed), rebuilds a server-side basket snapshot,
        verifies totals match the session, persists the order, and emits OrderPlaced to Kafka.
      operationId: createOrder
      parameters:
        - in: header
          name: Idempotency-Key
          required: true
          schema: { type: string }
          description: Prevents duplicate order creation on retries.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
            examples:
              sample:
                value:
                  customerId: "cust_12345"
                  checkoutSessionId: "cs_8fb7e4"
                  payment:
                    authId: "auth_5f2c9d"
      responses:
        '201':
          description: Order created
          headers:
            Location:
              schema: { type: string }
              description: URL of the created order resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
              examples:
                ok:
                  value:
                    orderId: "ORD-12345"
                    status: "CONFIRMED"
        '400':
          description: Invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '402':
          description: Payment not authorized / mismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Idempotency conflict (same key, different payload)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Session invalid or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CreateOrderRequest:
      type: object
      required: [customerId, checkoutSessionId, payment]
      properties:
        customerId:
          type: string
          example: "cust_12345"
        checkoutSessionId:
          type: string
          example: "cs_8fb7e4"
        payment:
          type: object
          required: [authId]
          properties:
            authId:
              type: string
              description: Payment authorization reference from the Payment System.
              example: "auth_5f2c9d"

    CreateOrderResponse:
      type: object
      required: [orderId, status]
      properties:
        orderId:
          type: string
          example: "ORD-12345"
        status:
          type: string
          enum: [CONFIRMED]
          example: "CONFIRMED"

    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: "SESSION_EXPIRED"
        message:
          type: string
          example: "Checkout session expired. Start again."